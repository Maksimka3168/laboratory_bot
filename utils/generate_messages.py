from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.helpers import escape_markdown


from utils.get_joke import get_joke
from utils.get_news import get_news
from utils.get_weather import get_weather


async def generate_start_message(first_name: str) -> tuple[str, InlineKeyboardMarkup]:
    """
    Generating the start message
    :param first_name: first name user
    :return: message text | str
    """
    text = f"""
üñê –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {first_name}!

üìã –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.
"""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üëÅ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", callback_data="see_list_commands")
        ],
        [
            InlineKeyboardButton(text="ü§ñ –≠—Ö–æ-–æ—Ç–≤–µ—Ç", callback_data="echo_answer"),
            InlineKeyboardButton(text="‚òÅ –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞", callback_data="see_weather")
        ],
        [
            InlineKeyboardButton(text="üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏", callback_data="last_news")
        ],
        [
            InlineKeyboardButton(text="üó£ –°–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞", callback_data="random_joke")
        ],
        [
            InlineKeyboardButton(text="‚ö† –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞", callback_data="stop_bot")
        ]
    ])
    return text, keyboard


async def generate_help_message():
    """
    Generating a message with commands
    :return: message text | str
    """
    text = """
üìã –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
üî∏ /start - –≤—ã–≤–æ–¥ –º–µ–Ω—é
üî∏ /echo <—Ç–µ–∫—Å—Ç> - —ç—Ö–æ-–æ—Ç–≤–µ—Ç —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
üî∏ /weather <–≥–æ—Ä–æ–¥> - –≤—ã–≤–æ–¥ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥—ã –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ
üî∏ /news - –≤—ã–≤–æ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
üî∏ /joke - –≤—ã–≤–æ–¥ —Å–ª—É—á–∞–π–Ω–æ–π —à—É—Ç–∫–∏
üî∏ /stop - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞    
"""
    return text


async def generate_news_message() -> list:
    """
    Generating a message about the latest news
    :return: list
    """
    message_list = []
    news_list = get_news()
    for news in news_list:
        message_list.append(
            {
                "text": f"""
*{escape_markdown(news['title']) if news.get('title') is not None else " "}*

{escape_markdown(news['description']) if news.get('description') is not None else " "}

*–ê–≤—Ç–æ—Ä:* {escape_markdown(news['author']) if news.get('author') is not None else " "}
*–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:* {escape_markdown(news['pubDate']) if news.get('pubDate') is not None else " "}

[–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é]({news['link'] if news.get('link') is not None else " "})         
""",
                "photo_link": news['photo_url']})
    return message_list


async def generate_joke_message() -> str:
    """
    Generating a message with a random joke for the user
    :return: str
    """
    text_json = get_joke()
    if text_json is not None:
        if len(text_json) != 0:
            if text_json[0].get('content') is not None:
                return text_json[0].get('content')
            else:
                return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
        else:
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
    else:
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."


async def generate_stop_message(first_name: str) -> str:
    """
    Generating a message saying goodbye to the user
    :param first_name: first name user
    :return:
    """
    text = f"–ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ —Å –≤–∞–º–∏ –ø–æ–æ–±—â–∞—Ç—å—Å—è, {first_name}! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã"
    return text


def generate_weather_message(place: str) -> str:
    """
    Generating a message with the current weather for the user
    :param place:
    :return:
    """
    temp = get_weather(place)
    if temp is not None:
        if temp.get("temp") is not None:
            return f"–í –≥–æ—Ä–æ–¥–µ {place} —Å–µ–π—á–∞—Å {temp.get('temp')}¬∞C"
        elif temp.get("error") is not None:
            return temp.get("error")
        else:
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
    else:
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
